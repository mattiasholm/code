name: Azure Terraform

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/azure-terraform.yml
      - terraform/azure/**
      - "!**.md"
      - "!**.gitignore"

  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/azure-terraform.yml
      - terraform/azure/**
      - "!**.md"
      - "!**.gitignore"

  workflow_dispatch:
    inputs:
      debug:
        description: Debug
        type: boolean

  workflow_call:

permissions:
  contents: read
  id-token: write

defaults:
  run:
    working-directory: terraform/azure

env:
  path: terraform/azure
  ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  ARM_USE_OIDC: true

jobs:
  build:
    name: Build
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'
    runs-on: ${{ vars.RUNNER }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~${{ vars.TERRAFORM_VERSION }}"
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform - Init
        run: terraform init -input=false

      - name: Terraform - Test
        run: terraform test

      - name: Terraform - Plan
        run: terraform plan -out=tfplan -input=false

      - name: Upload artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ env.path }}/tfplan

      - name: Debug
        if: inputs.debug && (success() || failure())
        uses: mxschmitt/action-tmate@v3

  release:
    name: Release
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ${{ vars.RUNNER }}
    environment:
      name: dev
      url: https://app.holm.io/
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: ${{ env.path }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "~${{ vars.TERRAFORM_VERSION }}"
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform - Init
        run: terraform init -input=false

      - name: Terraform - Apply
        run: terraform apply -input=false tfplan

      - name: Debug
        if: inputs.debug && (success() || failure())
        uses: mxschmitt/action-tmate@v3
