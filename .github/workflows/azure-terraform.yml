name: Azure Terraform

on:
  push:
    branches:
      - main
    paths:
      - terraform/azure/**
      - .github/workflows/azure-terraform.yml
      - "!**.md"

  workflow_dispatch:

  pull_request:

defaults:
  run:
    shell: bash
    working-directory: terraform/azure

env:
  path: terraform/azure
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Terraform Format
        run: terraform fmt -check

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Initialize
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: tfplan
          path: ${{ env.path }}/tfplan

  release:
    name: Release
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: tfplan
          path: ${{ env.path }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      # - name: Terraform Initialize
      #   run: terraform init

      - name: Terraform Apply
        run: terraform apply tfplan
