name: Azure ARM

on:
  push:
    branches:
      - main
    paths:
      - azure/arm/**
      - .github/workflows/azure-arm.yml
      - "!**.md"

  workflow_dispatch:

  pull_request:

defaults:
  run:
    working-directory: azure/arm

env:
  config: main.config

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Run arm-ttk
        shell: pwsh
        run: |
          $Config = Get-Content main.config
          $Module = ($Config | Select-String 'module=').ToString().Replace('module=', '').Replace("'", '')
          $Template = ($Config | Select-String 'template=').ToString().Replace('template=', '').Replace("'", '')
          Import-Module -FullyQualifiedName $Module
          Test-AzTemplate -MainTemplateFile $Template -TemplatePath $Template

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create resource group
        run: |
          . $config
          az group create --subscription $subscription --name $resourceGroup --location $location --tags ${tags[*]}

      - name: Validate deployment
        run: |
          . $config
          az deployment group validate --subscription $subscription --resource-group $resourceGroup --template-file $template --parameters @$parameters

      - name: What-if deployment
        run: |
          . $config
          az deployment group what-if --subscription $subscription --resource-group $resourceGroup --template-file $template --parameters @$parameters

  release:
    name: Release
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create deployment
        run: |
          . $config
          az deployment group create --subscription $subscription --resource-group $resourceGroup --template-file $template --parameters @$parameters
