{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "VNet_AddressSpace": {
            "type": "string"
        },
        "ASE_Location": {
            "type": "string"
        },
        "ASE_DefaultCertificateThumbprint": {
            "type": "string"
        },
        "KeyVault_Id": {
            "type": "string"
        },
        "ASE_DnsSuffix": {
            "type": "string"
        },
        "ASE_Sku": {
            "type": "string",
            "allowedValues": [
                "I1",
                "I2",
                "I3"
            ]
        },
        "ASE_DefaultCapacity": {
            "type": "int",
            "minValue": 1,
            "maxValue": 10
        },
        "SQL_Username": {
            "type": "string"
        },
        "SQL_Password": {
            "type": "securestring"
        },
        "SQL_Sku": {
            "type": "string",
            "allowedValues": [
                "S1",
                "S2",
                "S3",
                "S4",
                "P1"
            ]
        },
        "ASE_ILB-VIP": {
            "type": "string"
        },
        "P2S_AddressPool": {
            "type": "string"
        },
        "P2S_RootCertificateName": {
            "type": "string"
        },
        "P2S_RootCertificateData": {
            "type": "string"
        }
    },
    "variables": {
        "apiVersion_Network": "2018-05-01",
        "apiVersion_Storage": "2018-11-01",
        "apiVersion_KeyVault": "2018-02-14-preview",
        "apiVersion_Web": "2018-11-01",
        "apiVersion_Sql": "2018-06-01-preview",
        "apiVersion_SqlVNetRules": "2015-05-01-preview",
        "apiVersion_Insights": "2018-05-01-preview",
        "Subnets": "Gateway,ASE,Management",
        "SubnetRange": "[replace(parameters('VNet_AddressSpace'),'/16','/24')]",
        "Storage_Sku": "Standard_GRS",
        "KeyVault_Sku": "Standard",
        "KeyVault_MicrosoftWebRP": "b305f741-5faf-4220-a843-2f208ae96d8f",
        "ASE_ILB-Mode": 3,
        "AppSetting_AlwaysOn": true,
        "AppSetting_SessionAffinity": false,
        "AppSetting_HttpsOnly": true,
        "DeploymentSlot": "Staging",
        "SQL_Collation": "Finnish_Swedish_CI_AS",
        "P2S_Sku": "VpnGw1",
        "P2S_Type": "RouteBased"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersion_Network')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(resourceGroup().name,'-NSG-',split(variables('Subnets'),',')[1])]",
            "location": "[resourceGroup().location]",
            "tags": "[resourceGroup().tags]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow_Inbound_AppServiceManagement",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "AppServiceManagement",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "454-455",
                            "protocol": "*",
                            "priority": 1000
                        }
                    },
                    {
                        "name": "Allow_Inbound_ASESubnet",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[concat(split(variables('SubnetRange'),'.')[0],'.',split(variables('SubnetRange'),'.')[1],'.1.',split(variables('SubnetRange'),'.')[3])]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "protocol": "*",
                            "priority": 1100
                        }
                    },
                    {
                        "name": "Allow_Inbound_HTTP",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "80",
                            "protocol": "*",
                            "priority": 1200
                        }
                    },
                    {
                        "name": "Allow_Inbound_HTTPS",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "protocol": "*",
                            "priority": 1300
                        }
                    },
                    {
                        "name": "Allow_Inbound_FTP",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "21",
                            "protocol": "*",
                            "priority": 1400
                        }
                    },
                    {
                        "name": "Allow_Inbound_FTPS",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "990",
                            "protocol": "*",
                            "priority": 1500
                        }
                    },
                    {
                        "name": "Allow_Inbound_FTP-Data",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "10001-10020",
                            "protocol": "*",
                            "priority": 1600
                        }
                    },
                    {
                        "name": "Allow_Inbound_Remote-Debugging",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "4016-4022",
                            "protocol": "*",
                            "priority": 1700
                        }
                    },
                    {
                        "name": "Allow_Outbound_HTTPS",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "protocol": "*",
                            "priority": 1000
                        }
                    },
                    {
                        "name": "Allow_Outbound_SMB",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "445",
                            "protocol": "*",
                            "priority": 1100
                        }
                    },
                    {
                        "name": "Allow_Outbound_DB",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "1433",
                            "protocol": "*",
                            "priority": 1200
                        }
                    },
                    {
                        "name": "Allow_Outbound_DB2",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "11000-11999",
                            "protocol": "*",
                            "priority": 1300
                        }
                    },
                    {
                        "name": "Allow_Outbound_DB3",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "14000-14999",
                            "protocol": "*",
                            "priority": 1400
                        }
                    },
                    {
                        "name": "Allow_Outbound_DNS",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "53",
                            "protocol": "*",
                            "priority": 1500
                        }
                    },
                    {
                        "name": "Allow_Outbound_ASESubnet",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "[concat(split(variables('SubnetRange'),'.')[0],'.',split(variables('SubnetRange'),'.')[1],'.1.',split(variables('SubnetRange'),'.')[3])]",
                            "destinationPortRange": "*",
                            "protocol": "*",
                            "priority": 1600
                        }
                    },
                    {
                        "name": "Allow_Outbound_HTTP",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "80",
                            "protocol": "*",
                            "priority": 1700
                        }
                    },
                    {
                        "name": "Allow_Outbound_VNet",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "destinationPortRange": "*",
                            "protocol": "*",
                            "priority": 1800
                        }
                    }
                    /*{
                        "name": "Allow_Inbound_AppServiceManagement",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "AppServiceManagement",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "454-455",
                            "protocol": "*",
                            "priority": 1000
                        }
                    },
                    {
                        "name": "Allow_Inbound_ASESubnet",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[concat(split(variables('SubnetRange'),'.')[0],'.',split(variables('SubnetRange'),'.')[1],'.1.',split(variables('SubnetRange'),'.')[3])]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "protocol": "*",
                            "priority": 1100
                        }
                    },
                    {
                        "name": "Allow_Inbound_AzureLoadBalancer",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRanges": [
                                "454-455",
                                "16001"
                            ],
                            "protocol": "*",
                            "priority": 1200
                        }
                    },
                    {
                        "name": "Allow_Inbound_HTTPS",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "protocol": "Tcp",
                            "priority": 1300
                        }
                    },
                    {
                        "name": "Allow_Inbound_Remote-Debugging",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "4016-4022",
                            "protocol": "Tcp",
                            "priority": 1400
                        }
                    },
                    {
                        "name": "Deny_Inbound_All",
                        "properties": {
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "protocol": "*",
                            "priority": 4096
                        }
                    },
                    {
                        "name": "Allow_Outbound_NTP",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "123",
                            "protocol": "*",
                            "priority": 1000
                        }
                    },
                    {
                        "name": "Allow_Outbound_ASE-12000",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "12000",
                            "protocol": "*",
                            "priority": 1100
                        }
                    },
                    {
                        "name": "Allow_Outbound_ASE-Monitor",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefixes": [
                                "40.77.24.27/32",
                                "13.90.249.229/32",
                                "104.45.230.69/32",
                                "13.82.184.151/32"
                              ],
                            "destinationPortRanges": [
                                "80",
                                "443"
                            ],
                            "protocol": "*",
                            "priority": 1200
                        }
                    },
                    {
                        "name": "Allow_Outbound_Storage",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "Storage",
                            "destinationPortRange": "443",
                            "protocol": "Tcp",
                            "priority": 1300
                        }
                    },
                    {
                        "name": "Allow_Outbound_AzureKeyVault",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "AzureKeyVault",
                            "destinationPortRange": "443",
                            "protocol": "Tcp",
                            "priority": 1400
                        }
                    },
                    {
                        "name": "Allow_Outbound_Sql",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "Sql",
                            "destinationPortRange": "1433",
                            "protocol": "Tcp",
                            "priority": 1500
                        }
                    },
                    {
                        "name": "Deny_Outbound_All",
                        "properties": {
                            "access": "Deny",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "protocol": "*",
                            "priority": 4096
                        }
                    }*/
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion_Network')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(resourceGroup().name,'-NSG-',split(variables('Subnets'),',')[2])]",
            "location": "[resourceGroup().location]",
            "tags": "[resourceGroup().tags]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow_Inbound_RDP",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('P2S_AddressPool')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389",
                            "protocol": "*",
                            "priority": 1000
                        }
                    },
                    {
                        "name": "Deny_Inbound_All",
                        "properties": {
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "protocol": "*",
                            "priority": 4096
                        }
                    },
                    {
                        "name": "Allow_Outbound_HTTP",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "[concat(split(variables('SubnetRange'),'.')[0],'.',split(variables('SubnetRange'),'.')[1],'.1.',split(variables('SubnetRange'),'.')[3])]",
                            "destinationPortRange": "80",
                            "protocol": "*",
                            "priority": 1000
                        }
                    },
                    {
                        "name": "Allow_Outbound_HTTPS",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "[concat(split(variables('SubnetRange'),'.')[0],'.',split(variables('SubnetRange'),'.')[1],'.1.',split(variables('SubnetRange'),'.')[3])]",
                            "destinationPortRange": "443",
                            "protocol": "*",
                            "priority": 1100
                        }
                    },
                    {
                        "name": "Deny_Outbound_All",
                        "properties": {
                            "access": "Deny",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "protocol": "*",
                            "priority": 4096
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion_Network')]",
            "type": "Microsoft.Network/routeTables",
            "name": "[concat(resourceGroup().name,'-UDR-',split(variables('Subnets'),',')[1])]",
            "location": "[resourceGroup().location]",
            "tags": "[resourceGroup().tags]",
            "properties": {
                "routes": [
                    {
                        "name": "Default_Internet",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "Internet"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion_Network')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(resourceGroup().name,'-VNet01')]",
            "location": "[resourceGroup().location]",
            "tags": "[resourceGroup().tags]",
            "dependsOn": [
                "[concat(resourceGroup().name,'-UDR-',split(variables('Subnets'),',')[1])]",
                "[concat(resourceGroup().name,'-NSG-',split(variables('Subnets'),',')[1])]",
                "[concat(resourceGroup().name,'-NSG-',split(variables('Subnets'),',')[2])]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('VNet_AddressSpace')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[concat(split(variables('Subnets'),',')[0],'Subnet')]",
                        "properties": {
                            "addressPrefix": "[concat(split(variables('SubnetRange'),'.')[0],'.',split(variables('SubnetRange'),'.')[1],'.0.',split(variables('SubnetRange'),'.')[3])]"
                        }
                    },
                    {
                        "name": "[concat(split(variables('Subnets'),',')[1],'Subnet')]",
                        "properties": {
                            "addressPrefix": "[concat(split(variables('SubnetRange'),'.')[0],'.',split(variables('SubnetRange'),'.')[1],'.1.',split(variables('SubnetRange'),'.')[3])]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',concat(resourceGroup().name,'-NSG-',split(variables('Subnets'),',')[1]))]"
                            },
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.KeyVault"
                                },
                                {
                                    "service": "Microsoft.Storage"
                                },
                                {
                                    "service": "Microsoft.Sql"
                                },
                                {
                                    "service": "Microsoft.AzureActiveDirectory"
                                }
                            ],
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',concat(resourceGroup().name,'-UDR-',split(variables('Subnets'),',')[1]))]"
                            }
                        }
                    },
                    {
                        "name": "[concat(split(variables('Subnets'),',')[2],'Subnet')]",
                        "properties": {
                            "addressPrefix": "[concat(split(variables('SubnetRange'),'.')[0],'.',split(variables('SubnetRange'),'.')[1],'.2.',split(variables('SubnetRange'),'.')[3])]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',concat(resourceGroup().name,'-NSG-',split(variables('Subnets'),',')[2]))]"
                            }
                        }
                    }
                ]
            },
            "resources": []
        },
        {
            "apiVersion": "[variables('apiVersion_Storage')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[ToLower(replace(concat(resourceGroup().name,'-Storage01'),'-',''))]",
            "location": "[resourceGroup().location]",
            "tags": "[resourceGroup().tags]",
            "dependsOn": [
                "[concat(resourceGroup().name,'-VNet01')]"
            ],
            "sku": {
                "name": "[variables('Storage_Sku')]"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "ipRules": [],
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',concat(resourceGroup().name,'-VNet01'),concat(split(variables('Subnets'),',')[1],'Subnet'))]",
                            "action": "Allow"
                        }
                    ]
                },
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "apiVersion": "[variables('apiVersion_KeyVault')]",
            "type": "Microsoft.KeyVault/vaults",
            "name": "[concat(resourceGroup().name,'-Vault01')]",
            "location": "[resourceGroup().location]",
            "tags": "[resourceGroup().tags]",
            "dependsOn": [
                "[concat(resourceGroup().name,'-VNet01')]"
            ],
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "A",
                    "name": "[variables('KeyVault_Sku')]"
                },
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[variables('KeyVault_MicrosoftWebRP')]",
                        "permissions": {
                            "keys": [],
                            "secrets": [
                                "get"
                            ],
                            "certificates": [],
                            "storage": []
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "ipRules": [],
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',concat(resourceGroup().name,'-VNet01'),concat(split(variables('Subnets'),',')[1],'Subnet'))]",
                            "action": "Allow"
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion_Web')]",
            "type": "Microsoft.Web/certificates",
            "name": "[concat('DefaultCertificate_',resourceGroup().name,'-ASE01','_InternalLoadBalancingASE')]",
            "location": "[parameters('ASE_Location')]",
            "tags": "[resourceGroup().tags]",
            "dependsOn": [
                "[concat(resourceGroup().name,'-Vault01')]"
            ],
            "properties": {
                "keyVaultId": "[parameters('KeyVault_Id')]",
                "keyVaultSecretName": "ASE-DefaultCertificateSecret",
                "hostingEnvironmentProfile": {
                    "id": "[resourceId('Microsoft.Web/hostingEnvironments',concat(resourceGroup().name,'-ASE01'))]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion_Web')]",
            "type": "Microsoft.Web/hostingEnvironments",
            "name": "[concat(resourceGroup().name,'-ASE01')]",
            "location": "[parameters('ASE_Location')]",
            "tags": "[resourceGroup().tags]",
            "dependsOn": [
                "[concat(resourceGroup().name,'-VNet01')]",
                "[concat('DefaultCertificate_',resourceGroup().name,'-ASE01','_InternalLoadBalancingASE')]"
            ],
            "kind": "ASEV2",
            "properties": {
                "name": "[concat(resourceGroup().name,'-ASE01')]",
                "location": "[parameters('ASE_Location')]",
                "clusterSettings": [
                    {
                        "name": "DefaultSslCertificateThumbprint",
                        "value": "[parameters('ASE_DefaultCertificateThumbprint')]"
                    },
                    {
                        "name": "DisableTls1.0",
                        "value": "1"
                    },
                    {
                        "name": "DisableTls1.1",
                        "value": "1"
                    },
                    {
                        "name": "FrontEndSSLCipherSuiteOrder",
                        "value": "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384_P256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256_P256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384_P256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256_P256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA_P256,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA_P256"
                    }
                ],
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',concat(resourceGroup().name,'-VNet01'),concat(split(variables('Subnets'),',')[1],'Subnet'))]"
                },
                "dnsSuffix": "[parameters('ASE_DnsSuffix')]",
                "internalLoadBalancingMode": "[variables('ASE_ILB-Mode')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion_Web')]",
            "type": "Microsoft.Web/serverfarms",
            "name": "[concat(resourceGroup().name,'-AppPlan01')]",
            "location": "[resourceGroup().location]",
            "tags": "[resourceGroup().tags]",
            "dependsOn": [
                "[concat(resourceGroup().name,'-ASE01')]"
            ],
            "properties": {
                "hostingEnvironmentProfile": {
                    "id": "[resourceId('Microsoft.Web/hostingEnvironments',concat(resourceGroup().name,'-ASE01'))]"
                }
            },
            "sku": {
                "name": "[parameters('ASE_Sku')]",
                "capacity": "[parameters('ASE_DefaultCapacity')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion_Web')]",
            "type": "Microsoft.Web/sites",
            "name": "[concat(resourceGroup().name,'-App01')]",
            "location": "[resourceGroup().location]",
            "tags": "[resourceGroup().tags]",
            "dependsOn": [
                "[concat(resourceGroup().name,'-AppPlan01')]"
            ],
            "kind": "app",
            "properties": {
                "serverFarmId": "[concat(resourceGroup().name,'-AppPlan01')]",
                "hostingEnvironmentProfile": {
                    "id": "[resourceId('Microsoft.Web/hostingEnvironments',concat(resourceGroup().name,'-ASE01'))]"
                },
                "siteConfig": {
                    "alwaysOn": "[variables('AppSetting_AlwaysOn')]"
                },
                "clientAffinityEnabled": "[variables('AppSetting_SessionAffinity')]",
                "httpsOnly": "[variables('AppSetting_HttpsOnly')]"
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersion_Web')]",
                    "type": "siteextensions",
                    "name": "Microsoft.ApplicationInsights.AzureWebSites",
                    "location": "[resourceGroup().location]",
                    "tags": "[resourceGroup().tags]",
                    "dependsOn": [
                        "[concat(resourceGroup().name,'-App01')]"
                    ]
                },
                {
                    "apiVersion": "[variables('apiVersion_Web')]",
                    "type": "config",
                    "name": "appsettings",
                    "location": "[resourceGroup().location]",
                    "tags": "[resourceGroup().tags]",
                    "dependsOn": [
                        "[concat(resourceGroup().name,'-App01')]",
                        "[concat(resourceGroup().name,'-AppInsights01')]",
                        "Microsoft.ApplicationInsights.AzureWebSites"
                    ],
                    "properties": {
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat(resourceGroup().name,'-AppInsights01'),variables('apiVersion_Insights')).InstrumentationKey]"
                    }
                },
                {
                    "apiVersion": "[variables('apiVersion_Web')]",
                    "type": "config",
                    "name": "connectionstrings",
                    "location": "[resourceGroup().location]",
                    "tags": "[resourceGroup().tags]",
                    "dependsOn": [
                        "[concat(resourceGroup().name,'-App01')]",
                        "[concat(resourceGroup().name,'-DB01')]"
                    ],
                    "properties": {
                        "Database": {
                            "type": "SQLAzure",
                            "value": "[concat('Data Source=tcp:',reference(concat(resourceGroup().name,'-SQL01')).fullyQualifiedDomainName,',1433;Initial Catalog=',concat(resourceGroup().name,'-DB01'),';User Id=',parameters('SQL_Username'),';Password=',parameters('SQL_Password'),';')]"
                        }
                    }
                },
                {
                    "apiVersion": "[variables('apiVersion_Web')]",
                    "type": "slots",
                    "name": "[variables('DeploymentSlot')]",
                    "location": "[resourceGroup().location]",
                    "tags": "[resourceGroup().tags]",
                    "dependsOn": [
                        "[concat(resourceGroup().name,'-App01')]"
                    ],
                    "kind": "app",
                    "properties": {
                        "serverFarmId": "[concat(resourceGroup().name,'-AppPlan01')]",
                        "hostingEnvironmentProfile": {
                            "id": "[resourceId('Microsoft.Web/hostingEnvironments',concat(resourceGroup().name,'-ASE01'))]"
                        },
                        "httpsOnly": "[variables('AppSetting_HttpsOnly')]"
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('apiVersion_Insights')]",
            "type": "Microsoft.Insights/components",
            "name": "[concat(resourceGroup().name,'-AppInsights01')]",
            "location": "[resourceGroup().location]",
            "tags": "[resourceGroup().tags]",
            "dependsOn": [
                "[concat(resourceGroup().name,'-App01')]"
            ],
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "applicationId": "[concat(resourceGroup().name,'-App01')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion_Sql')]",
            "type": "Microsoft.Sql/servers",
            "name": "[concat(resourceGroup().name,'-SQL01')]",
            "location": "[resourceGroup().location]",
            "tags": "[resourceGroup().tags]",
            "properties": {
                "administratorLogin": "[parameters('SQL_Username')]",
                "administratorLoginPassword": "[parameters('SQL_Password')]"
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersion_Sql')]",
                    "type": "databases",
                    "name": "[concat(resourceGroup().name,'-DB01')]",
                    "location": "[resourceGroup().location]",
                    "tags": "[resourceGroup().tags]",
                    "dependsOn": [
                        "[concat(resourceGroup().name,'-SQL01')]"
                    ],
                    "sku": {
                        "name": "[parameters('SQL_Sku')]"
                    },
                    "properties": {
                        "collation": "[variables('SQL_Collation')]"
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('apiVersion_SqlVNetRules')]",
            "type": "Microsoft.Sql/servers/virtualNetworkRules",
            "name": "[concat(resourceGroup().name,'-SQL01','/','virtualNetworkRules')]",
            "location": "[resourceGroup().location]",
            "tags": "[resourceGroup().tags]",
            "dependsOn": [
                "[concat(resourceGroup().name,'-SQL01')]",
                "[concat(resourceGroup().name,'-VNet01')]"
            ],
            "properties": {
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets',concat(resourceGroup().name,'-VNet01'),concat(split(variables('Subnets'),',')[1],'Subnet'))]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion_Network')]",
            "type": "Microsoft.Network/dnsZones",
            "name": "[parameters('ASE_DnsSuffix')]",
            "location": "global",
            "tags": "[resourceGroup().tags]",
            "dependsOn": [
                "[concat(resourceGroup().name,'-VNet01')]"
            ],
            "properties": {
                "zoneType": "Private",
                "resolutionVirtualNetworks": [
                    {
                        "id": "[resourceId('Microsoft.Network/virtualNetworks',concat(resourceGroup().name,'-VNet01'))]"
                    }
                ]
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersion_Network')]",
                    "type": "A",
                    "name": "*",
                    "dependsOn": [
                        "[parameters('ASE_DnsSuffix')]"
                    ],
                    "properties": {
                        "TTL": 3600,
                        "ARecords": [
                            {
                                "ipv4Address": "[parameters('ASE_ILB-VIP')]"
                            }
                        ]
                    }
                },
                {
                    "apiVersion": "[variables('apiVersion_Network')]",
                    "type": "A",
                    "name": "*.scm",
                    "dependsOn": [
                        "[parameters('ASE_DnsSuffix')]"
                    ],
                    "properties": {
                        "TTL": 3600,
                        "ARecords": [
                            {
                                "ipv4Address": "[parameters('ASE_ILB-VIP')]"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('apiVersion_Network')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(resourceGroup().name,'-PIP-VNGW01')]",
            "location": "[resourceGroup().location]",
            "tags": "[resourceGroup().tags]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "publicIPAddressVersion": "IPv4"
            }
        },
        {
            "apiVersion": "[variables('apiVersion_Network')]",
            "type": "Microsoft.Network/virtualNetworkGateways",
            "name": "[concat(resourceGroup().name,'-VNGW01')]",
            "location": "[resourceGroup().location]",
            "tags": "[resourceGroup().tags]",
            "dependsOn": [
                "[concat(resourceGroup().name,'-VNet01')]",
                "[concat(resourceGroup().name,'-PIP-VNGW01')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "GatewayIpConfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',concat(resourceGroup().name,'-VNet01'),concat(split(variables('Subnets'),',')[0],'Subnet'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(resourceGroup().name,'-PIP-VNGW01'))]"
                            }
                        }
                    }
                ],
                "gatewayType": "Vpn",
                "vpnType": "[variables('P2S_Type')]",
                "sku": {
                    "name": "[variables('P2S_Sku')]",
                    "tier": "[variables('P2S_Sku')]"
                },
                "enableBgp": "false",
                "vpnClientConfiguration": {
                    "vpnClientAddressPool": {
                        "addressPrefixes": [
                            "[parameters('P2S_AddressPool')]"
                        ]
                    },
                    "vpnClientProtocols": [
                        "SSTP",
                        "IKEv2"
                    ],
                    "vpnClientRootCertificates": [
                        {
                            "name": "[parameters('P2S_RootCertificateName')]",
                            "properties": {
                                "publicCertData": "[parameters('P2S_RootCertificateData')]"
                            }
                        }
                    ],
                    "vpnClientRevokedCertificates": []
                }
            }
        }
    ],
    "outputs": {}
}