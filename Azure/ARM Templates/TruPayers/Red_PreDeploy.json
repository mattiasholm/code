{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Prefix": {
            "type": "string"
        },
        "Suffix": {
            "type": "string"
        },
        "KeyVault_Admin": {
            "type": "string"
        },
        "KeyVault_IP": {
            "type": "string"
        }
    },
    "variables": {
        "apiVersion_KeyVault": "2018-02-14-preview",
        "FullPrefix": "[concat(parameters('Prefix'),'-',parameters('Suffix'))]",
        "Tag_Environment": "[if(equals(split(parameters('Suffix'),'-')[1],'Prod'),'Production',if(equals(split(parameters('Suffix'),'-')[1],'Dev'),'Development','Unknown'))]",
        "Tag_SecurityLevel": "[if(equals(parameters('Prefix'),'Red'),'Red',if(equals(parameters('Prefix'),'Blue'),'Blue',if(equals(parameters('Prefix'),'Green'),'Green','Unknown')))]"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersion_KeyVault')]",
            "type": "Microsoft.KeyVault/vaults",
            "name": "[concat(variables('FullPrefix'),'-Vault01')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "Environment": "[variables('Tag_Environment')]",
                "SecurityLevel": "[variables('Tag_SecurityLevel')]"
            },
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[parameters('KeyVault_Admin')]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ],
                            "certificates": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "ManageContacts",
                                "ManageIssuers",
                                "GetIssuers",
                                "ListIssuers",
                                "SetIssuers",
                                "DeleteIssuers"
                            ],
                            "storage": []
                        }
                    }
                ],
                "enabledForDeployment": false,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "ipRules": [
                        {
                            "value": "[parameters('KeyVault_IP')]"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "KeyVaultResourceId": {
            "value": "[resourceId('Microsoft.KeyVault/vaults',concat(variables('FullPrefix'),'-Vault01'))]",
            "type": "string"
        }
    }
}