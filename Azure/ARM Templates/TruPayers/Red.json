{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Prefix": {
            "type": "string"
        },
        "Suffix": {
            "type": "string"
        },
        "KeyVault_Admin": {
            "type": "string"
        },
        "KeyVault_IP": {
            "type": "string"
        },
        "AddressSpace": {
            "type": "string"
        }
    },
    "variables": {
        "apiVersion_KeyVault": "2018-02-14-preview",
        "apiVersion_Network": "2018-12-01",
        "apiVersion_Storage": "2018-11-01",
        "Tag_Environment": "[if(equals(split(parameters('Suffix'),'-')[1],'Prod'),'Production',if(equals(split(parameters('Suffix'),'-')[1],'Dev'),'Development','Unknown'))]",
        "Tag_SecurityLevel": "[if(equals(parameters('Prefix'),'Red'),'Red',if(equals(parameters('Prefix'),'Blue'),'Blue',if(equals(parameters('Prefix'),'Green'),'Green','Unknown')))]",
        "FullPrefix": "[concat(parameters('Prefix'),'-',parameters('Suffix'))]",
        "SubnetRange": "[replace(parameters('AddressSpace'),'/16','/24')]",
        "Subnets": "ASE",
        "StorageSku": "Standard_LRS"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersion_Network')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(variables('FullPrefix'),'-NSG-',split(variables('Subnets'),',')[0])]",
            "location": "[resourceGroup().location]",
            "tags": {
                "Environment": "[variables('Tag_Environment')]",
                "SecurityLevel": "[variables('Tag_SecurityLevel')]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "Deny_Inbound_All",
                        "properties": {
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "protocol": "*",
                            "priority": 4096
                        }
                    },
                    {
                        "name": "Allow_Outbound_AzureKeyVault",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "AzureKeyVault",
                            "destinationPortRange": "443",
                            "protocol": "TCP",
                            "priority": 1000
                        }
                    },
                    {
                        "name": "Allow_Outbound_Storage",
                        "properties": {
                            "access": "Allow",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "Storage",
                            "destinationPortRange": "443",
                            "protocol": "TCP",
                            "priority": 1100
                        }
                    },
                    {
                        "name": "Deny_Outbound_All",
                        "properties": {
                            "access": "Deny",
                            "direction": "Outbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "protocol": "*",
                            "priority": 4096
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion_Network')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[concat(variables('FullPrefix'),'-VNet01')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "Environment": "[variables('Tag_Environment')]",
                "SecurityLevel": "[variables('Tag_SecurityLevel')]"
            },
            "dependsOn": [
                "[concat(variables('FullPrefix'),'-NSG-',split(variables('Subnets'),',')[0])]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('AddressSpace')]"
                    ]
                },
                "copy": [
                    {
                        "name": "subnets",
                        "count": "[length(split(variables('Subnets'),','))]",
                        "input": {
                            "name": "[concat(split(variables('Subnets'),',')[copyIndex('subnets')],'Subnet')]",
                            "properties": {
                                "addressPrefix": "[concat(split(variables('SubnetRange'),'.')[0],'.',split(variables('SubnetRange'),'.')[2],'.',copyIndex('subnets',1),'.',split(variables('SubnetRange'),'.')[3])]",
                                "networkSecurityGroup": {
                                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups',concat(variables('FullPrefix'),'-NSG-',split(variables('Subnets'),',')[copyIndex('subnets')]))]"
                                },
                                "serviceEndpoints": [
                                    {
                                        "service": "Microsoft.KeyVault"
                                    },
                                    {
                                        "service": "Microsoft.Storage"
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersion_Network')]",
                    "type": "subnets",
                    "name": "GatewaySubnet",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat(variables('FullPrefix'),'-VNet01')]"
                    ],
                    "properties": {
                        "addressPrefix": "[concat(split(variables('SubnetRange'),'.')[0],'.',split(variables('SubnetRange'),'.')[2],'.','0','.',split(variables('SubnetRange'),'.')[3])]"
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('apiVersion_Storage')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[ToLower(replace(concat(variables('FullPrefix'),'-Storage01'),'-',''))]",
            "location": "[resourceGroup().location]",
            "tags": {
                "Environment": "[variables('Tag_Environment')]",
                "SecurityLevel": "[variables('Tag_SecurityLevel')]"
            },
            "dependsOn": [
                "[concat(variables('FullPrefix'),'-VNet01')]"
            ],
            "sku": {
                "name": "[variables('StorageSku')]"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "None",
                    "defaultAction": "Deny",
                    "ipRules": [],
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',concat(variables('FullPrefix'),'-VNet01'),concat(split(variables('Subnets'),',')[0],'Subnet'))]",
                            "action": "Allow"
                        }
                    ]
                },
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "apiVersion": "[variables('apiVersion_KeyVault')]",
            "type": "Microsoft.KeyVault/vaults",
            "name": "[concat(variables('FullPrefix'),'-Vault01')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "Environment": "[variables('Tag_Environment')]",
                "SecurityLevel": "[variables('Tag_SecurityLevel')]"
            },
            "dependsOn": [
                "[concat(variables('FullPrefix'),'-VNet01')]"
            ],
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "accessPolicies": [],
                "enabledForDeployment": false,
                "enabledForTemplateDeployment": true,
                "enableSoftDelete": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Deny",
                    "ipRules": [],
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',concat(variables('FullPrefix'),'-VNet01'),concat(split(variables('Subnets'),',')[0],'Subnet'))]",
                            "action": "Allow"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {}
}