{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "EnvironmentSuffix": {
            "type": "string"
        },
        "Module": {
            "type": "string"
        },
        "AppServiceSku": {
            "type": "string",
            "allowedValues": [
                "S1",
                "S2",
                "S3",
                "P1v2",
                "P2v2",
                "P3v2"
            ]
        },
        "AppServiceMinCapacity": {
            "type": "int",
            "minValue": 1,
            "maxValue": 20
        },
        "AppServiceMaxCapacity": {
            "type": "int",
            "minValue": 1,
            "maxValue": 20
        },
        "AppServiceDefaultCapacity": {
            "type": "int",
            "minValue": 1,
            "maxValue": 20
        },
        "Autoscale_CpuPercentage_Increase": {
            "type": "int",
            "minValue": 50,
            "maxValue": 100
        },
        "Autoscale_CpuPercentage_Decrease": {
            "type": "int",
            "minValue": 0,
            "maxValue": 50
        },
        "Autoscale_TimeWindow": {
            "type": "string"
        },
        "Autoscale_Cooldown": {
            "type": "string"
        }
    },
    "variables": {
        "apiVersion_Web": "2018-11-01",
        "apiVersion_Insights": "2018-05-01-preview",
        "apiVersion_Autoscale": "2015-04-01",
        "apiVersion_CosmosDB": "2016-03-31",
        "Tag_Environment": "[if(equals(split(parameters('EnvironmentSuffix'),'-')[1],'Prod'),'Production',if(equals(split(parameters('EnvironmentSuffix'),'-')[1],'Dev'),'Development','Unknown'))]",
        "AppSetting_AlwaysOn": true,
        "AppSetting_SessionAffinity": false,
        "AppSetting_HttpsOnly": true,
        "SlotName": "Staging",
        "CosmosDB_ApiType": "SQL",
        "CosmosDB_ConsistencyLevel": "Session"
    },
    "resources": [
        {
            "apiVersion": "[variables('apiVersion_Web')]",
            "type": "Microsoft.Web/serverfarms",
            "name": "[concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-AppPlan01')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "Environment": "[variables('Tag_Environment')]"
            },
            "kind": "app",
            "properties": {},
            "sku": {
                "name": "[parameters('AppServiceSku')]",
                "capacity": "[parameters('AppServiceDefaultCapacity')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion_Web')]",
            "type": "Microsoft.Web/sites",
            "name": "[concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-App01')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "Environment": "[variables('Tag_Environment')]"
            },
            "dependsOn": [
                "[concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-AppPlan01')]"
            ],
            "kind": "app",
            "properties": {
                "serverFarmId": "[concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-AppPlan01')]",
                "siteConfig": {
                    "alwaysOn": "[variables('AppSetting_AlwaysOn')]"
                },
                "clientAffinityEnabled": "[variables('AppSetting_SessionAffinity')]",
                "httpsOnly": "[variables('AppSetting_HttpsOnly')]"
            },
            "resources": [
                {
                    "apiVersion": "[variables('apiVersion_Web')]",
                    "type": "siteextensions",
                    "name": "Microsoft.ApplicationInsights.AzureWebSites",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "Environment": "[variables('Tag_Environment')]"
                    },
                    "dependsOn": [
                        "[concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-App01')]"
                    ]
                },
                {
                    "apiVersion": "[variables('apiVersion_Web')]",
                    "type": "config",
                    "name": "appsettings",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "Environment": "[variables('Tag_Environment')]"
                    },
                    "dependsOn": [
                        "[concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-App01')]",
                        "[concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-AppInsights01')]",
                        "Microsoft.ApplicationInsights.AzureWebSites"
                    ],
                    "properties": {
                        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-AppInsights01'),variables('apiVersion_Insights')).InstrumentationKey]"
                    }
                },
                {
                    "apiVersion": "[variables('apiVersion_Web')]",
                    "type": "slots",
                    "name": "[variables('SlotName')]",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "Environment": "[variables('Tag_Environment')]"
                    },
                    "dependsOn": [
                        "[concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-App01')]"
                    ],
                    "kind": "app",
                    "properties": {
                        "serverFarmId": "[concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-AppPlan01')]",
                        "httpsOnly": "[variables('AppSetting_HttpsOnly')]"
                    }
                }
            ]
        },
        {
            "apiVersion": "[variables('apiVersion_Insights')]",
            "type": "Microsoft.Insights/components",
            "name": "[concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-AppInsights01')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "Environment": "[variables('Tag_Environment')]"
            },
            "dependsOn": [
                "[concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-App01')]"
            ],
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "applicationId": "[concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-App01')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion_Autoscale')]",
            "type": "Microsoft.Insights/autoscalesettings",
            "name": "AutoscaleSetting01",
            "location": "[resourceGroup().location]",
            "tags": {
                "Environment": "[variables('Tag_Environment')]"
            },
            "dependsOn": [
                "[concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-AppPlan01')]"
            ],
            "properties": {
                "enabled": true,
                "targetResourceUri": "[resourceId('Microsoft.Web/serverfarms',concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-AppPlan01'))]",
                "profiles": [
                    {
                        "name": "AutoscaleProfile01",
                        "capacity": {
                            "minimum": "[parameters('AppServiceMinCapacity')]",
                            "maximum": "[parameters('AppServiceMaxCapacity')]",
                            "default": "[parameters('AppServiceDefaultCapacity')]"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms',concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-AppPlan01'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "[parameters('Autoscale_TimeWindow')]",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": "[parameters('Autoscale_CpuPercentage_Increase')]"
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": 1,
                                    "cooldown": "[parameters('Autoscale_Cooldown')]"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms',concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-AppPlan01'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "[parameters('Autoscale_TimeWindow')]",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": "[parameters('Autoscale_CpuPercentage_Decrease')]"
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": 1,
                                    "cooldown": "[parameters('Autoscale_Cooldown')]"
                                }
                            }
                        ]
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion_CosmosDB')]",
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "name": "[toLower(concat(parameters('Module'),'-',parameters('EnvironmentSuffix'),'-CosmosDB01'))]",
            "location": "[resourceGroup().location]",
            "tags": {
                "Environment": "[variables('Tag_Environment')]",
                "defaultExperience": "[if(equals(variables('CosmosDB_ApiType'), 'Cassandra'), 'Cassandra', if(equals(variables('CosmosDB_ApiType'), 'Gremlin'), 'Graph', if(equals(variables('CosmosDB_ApiType'), 'MongoDB'), 'MongoDB', if(equals(variables('CosmosDB_ApiType'), 'SQL'), 'DocumentDB', if(equals(variables('CosmosDB_ApiType'), 'Table'), 'Table', '')))))]"
            },
            "kind": "[if(equals(variables('CosmosDB_ApiType'), 'MongoDB'), 'MongoDB', 'GlobalDocumentDB')]",
            "properties": {
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "[variables('CosmosDB_ConsistencyLevel')]"
                },
                "locations": [
                    {
                        "locationName": "[resourceGroup().location]",
                        "failoverPriority": 0
                    }
                ],
                "databaseAccountOfferType": "Standard",
                "ipRangeFilter": "",
                "isVirtualNetworkFilterEnabled": false,
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false
            }
        }
    ],
    "outputs": {}
}