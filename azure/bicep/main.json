{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "functions": [],
  "variables": {
    "globalReplication": true,
    "rgName": "holm-bicep",
    "rgLocation": "WestEurope"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2019-05-01",
      "name": "[variables('rgName')]",
      "location": "[variables('rgLocation')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "keyvault",
      "resourceGroup": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "functions": [],
          "variables": {
            "prefix": "[resourceGroup().name]",
            "location": "[resourceGroup().location]",
            "keyvaultName": "[format('{0}-KeyVault01', variables('prefix'))]",
            "keyvaultFamily": "A",
            "keyvaultSku": "standard"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[variables('keyvaultName')]",
              "location": "[variables('location')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "family": "[variables('keyvaultFamily')]",
                  "name": "[variables('keyvaultSku')]"
                },
                "accessPolicies": []
              }
            }
          ],
          "outputs": {
            "keyvaultUrl": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyvaultName'))).vaultUri]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "storage",
      "resourceGroup": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "globalReplication": {
            "value": "[variables('globalReplication')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "globalReplication": {
              "type": "bool",
              "defaultValue": true
            }
          },
          "functions": [],
          "variables": {
            "prefix": "[resourceGroup().name]",
            "location": "[resourceGroup().location]",
            "storageName": "[toLower(replace(format('{0}-Storage01', variables('prefix')), '-', ''))]",
            "storageSku": "[if(parameters('globalReplication'), 'Standard_GRS', 'Standard_LRS')]",
            "storageKind": "StorageV2",
            "storagePublicAccess": false,
            "storageHttpsOnly": true,
            "storageTls": "TLS1_2",
            "containerName": "[toLower('Container01')]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "name": "[variables('storageName')]",
              "location": "[variables('location')]",
              "kind": "[variables('storageKind')]",
              "sku": {
                "name": "[variables('storageSku')]"
              },
              "properties": {
                "allowBlobPublicAccess": "[variables('storagePublicAccess')]",
                "supportsHttpsTrafficOnly": "[variables('storageHttpsOnly')]",
                "minimumTlsVersion": "[variables('storageTls')]"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/default/{1}', variables('storageName'), variables('containerName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
              ]
            }
          ],
          "outputs": {
            "storageBlobEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))).primaryEndpoints.blob]"
            },
            "storageQueueEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))).primaryEndpoints.queue]"
            },
            "storageTableEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))).primaryEndpoints.table]"
            },
            "storageFileEndpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))).primaryEndpoints.file]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))]"
      ]
    }
  ],
  "outputs": {
    "keyvaultUrl": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))), 'Microsoft.Resources/deployments', 'keyvault'), '2019-10-01').outputs.keyvaultUrl.value]"
    },
    "storageBlobEndpoint": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, subscriptionResourceId('Microsoft.Resources/resourceGroups', variables('rgName'))), 'Microsoft.Resources/deployments', 'storage'), '2019-10-01').outputs.storageBlobEndpoint.value]"
    }
  }
}