trigger:
  branches:
    include:
      - main
  paths:
    include:
      - ci
      - terraform

pool:
  vmImage: ubuntu-24.04

parameters:
  - name: environments
    type: object
    default:
      - test
      - stage
      - prod

variables:
  workingDirectory: terraform

stages:
  - stage: build
    displayName: Build
    jobs:
      - ${{ each environment in parameters.environments }}:
          - job: build_${{ environment }}
            displayName: Build (${{ environment }})
            steps:
              - task: AzureCLI@2
                displayName: Set environment variables
                inputs:
                  azureSubscription: ${{ environment }}
                  scriptType: bash
                  scriptLocation: inlineScript
                  addSpnToEnvironment: true
                  inlineScript: |
                    echo "##vso[task.setvariable variable=ARM_USE_OIDC]true"
                    echo "##vso[task.setvariable variable=ARM_TENANT_ID]$tenantId"
                    echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId"
                    echo "##vso[task.setvariable variable=ARM_OIDC_TOKEN]$idToken"

              - script: terraform init -input=false
                displayName: Terraform - Init
                workingDirectory: ${{ variables.workingDirectory }}

              - script: terraform workspace select ${{ environment }}
                displayName: Terraform - Workspace
                workingDirectory: ${{ variables.workingDirectory }}

              - script: terraform plan -out=tfplan -input=false
                displayName: Terraform - Plan
                workingDirectory: ${{ variables.workingDirectory }}

              - publish: ${{ variables.workingDirectory }}/tfplan
                displayName: Upload artifact
                condition: and(succeeded(), or(eq('${{ environment }}', 'test'), eq(variables['Build.SourceBranch'], 'refs/heads/main')))
                artifact: ${{ environment }}

  - ${{ each environment in parameters.environments }}:
      - stage: release_${{ environment }}
        displayName: Release (${{ environment }})
        condition: and(succeeded(), or(eq('${{ environment }}', 'test'), eq(variables['Build.SourceBranch'], 'refs/heads/main')))
        jobs:
          - deployment: release
            displayName: Release (${{ environment }})
            environment: ${{ environment }}
            strategy:
              runOnce:
                deploy:
                  steps:
                    - checkout: self

                    - download: current
                      displayName: Download artifact
                      artifact: ${{ environment }}

                    - task: AzureCLI@2
                      displayName: Set environment variables
                      inputs:
                        azureSubscription: ${{ environment }}
                        scriptType: bash
                        scriptLocation: inlineScript
                        addSpnToEnvironment: true
                        inlineScript: |
                          echo "##vso[task.setvariable variable=ARM_USE_OIDC]true"
                          echo "##vso[task.setvariable variable=ARM_TENANT_ID]$tenantId"
                          echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId"
                          echo "##vso[task.setvariable variable=ARM_OIDC_TOKEN]$idToken"

                    - script: terraform init -input=false
                      displayName: Terraform - Init
                      workingDirectory: ${{ variables.workingDirectory }}

                    - script: terraform workspace select ${{ environment }}
                      displayName: Terraform - Workspace
                      workingDirectory: ${{ variables.workingDirectory }}

                    - script: terraform apply -input=false $(Pipeline.Workspace)/${{ environment }}/tfplan
                      displayName: Terraform - Apply
                      workingDirectory: ${{ variables.workingDirectory }}
