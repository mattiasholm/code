{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "prefix": {
            "type": "string"
        },
        "planSku": {
            "type": "string",
            "defaultValue": "F1",
            "allowedValues": [
                "F1",
                "D1",
                "B1"
            ]
        },
        "planCapacity": {
            "type": "int",
            "defaultValue": 0,
            "minValue": 0,
            "maxValue": 3
        },
        "stSku": {
            "type": "string",
            "defaultValue": "Standard_GRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS"
            ]
        },
        "vnetAddressPrefix": {
            "type": "string"
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "tags": "[resourceGroup().tags]",
        "planName": "[format('plan-{0}-001', parameters('prefix'))]",
        "planKind": "app",
        "appName": "[format('app-{0}-001', parameters('prefix'))]",
        "appHttpsOnly": true,
        "kvName": "[format('kv-{0}-001', parameters('prefix'))]",
        "kvFamily": "A",
        "kvSku": "standard",
        "stCount": 3,
        "copy": [
            {
                "name": "stName",
                "count": "[variables('stCount')]",
                "input": "[toLower(replace(format('st-{0}-00{1}', parameters('prefix'), copyIndex('stName', 1)), '-', ''))]"
            }
        ],
        "stKind": "StorageV2",
        "stAllowBlobPublicAccess": [
            false,
            true,
            false
        ],
        "stSupportsHttpsTrafficOnly": true,
        "stMinimumTlsVersion": "TLS1_2",
        "stContainerName": "[format('default/{0}', toLower('Container01'))]",
        "vnetName": "[format('vnet-{0}-001', parameters('prefix'))]",
        "snetName": "Subnet01"
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-12-01",
            "name": "[variables('planName')]",
            "location": "[variables('location')]",
            "tags": "[variables('tags')]",
            "kind": "[variables('planKind')]",
            "sku": {
                "name": "[parameters('planSku')]",
                "capacity": "[parameters('planCapacity')]"
            }
        },
        {
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]"
            ],
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-12-01",
            "name": "[variables('appName')]",
            "location": "[variables('location')]",
            "tags": "[variables('tags')]",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
                "httpsOnly": "[variables('appHttpsOnly')]"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2019-09-01",
            "name": "[variables('kvName')]",
            "location": "[variables('location')]",
            "tags": "[variables('tags')]",
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "[variables('kvFamily')]",
                    "name": "[variables('kvSku')]"
                },
                "accessPolicies": []
            }
        },
        {
            "copy": {
                "name": "storageAccounts",
                "count": "[variables('stCount')]",
                "mode": "parallel"
            },
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('stName')[copyIndex()]]",
            "location": "[variables('location')]",
            "tags": "[variables('tags')]",
            "sku": {
                "name": "[parameters('stSku')]"
            },
            "kind": "[variables('stKind')]",
            "properties": {
                "allowBlobPublicAccess": "[variables('stAllowBlobPublicAccess')[copyIndex()]]",
                "supportsHttpsTrafficOnly": "[variables('stSupportsHttpsTrafficOnly')]",
                "minimumTlsVersion": "[variables('stMinimumTlsVersion')]"
            },
            "resources": [
                {
                    "dependsOn": [
                        "[variables('stName')[copyIndex()]]"
                    ],
                    "type": "blobServices/containers",
                    "apiVersion": "2019-06-01",
                    "name": "[variables('stContainerName')]"
                }
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-06-01",
            "name": "[variables('vnetName')]",
            "location": "[variables('location')]",
            "tags": "[variables('tags')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('snetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('vnetAddressPrefix')[0]]"
                        }
                    }
                ]
            }
        }
    ],
    "outputs": {
        "appUrl": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Web/sites', variables('appName'))).defaultHostName]"
        },
        "kvUrl": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('kvName'))).vaultUri]"
        },
        "stBlobUrl": {
            "type": "array",
            "copy": {
                "count": "[variables('stCount')]",
                "input": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('stName')[copyIndex()])).primaryEndpoints.blob]"
            }
        },
        "stFileUrl": {
            "type": "array",
            "copy": {
                "count": "[variables('stCount')]",
                "input": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('stName')[copyIndex()])).primaryEndpoints.file]"
            }
        },
        "stTableUrl": {
            "type": "array",
            "copy": {
                "count": "[variables('stCount')]",
                "input": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('stName')[copyIndex()])).primaryEndpoints.table]"
            }
        },
        "stQueueUrl": {
            "type": "array",
            "copy": {
                "count": "[variables('stCount')]",
                "input": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('stName')[copyIndex()])).primaryEndpoints.queue]"
            }
        },
        "vnetEnableDdosProtection": {
            "type": "bool",
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))).enableDdosProtection]"
        },
        "vnetEnableVmProtection": {
            "type": "bool",
            "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))).enableVmProtection]"
        }
    }
}